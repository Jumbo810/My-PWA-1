name: Upload APP TO Release

on:
  # workflow_dispatch
  release:
    types:
      - published
      
jobs:
  attach-apks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Build and attach APKs to release
        shell: bash {0}
        run: |
          exit_on_error() {
              echo "$1"
              echo "Deleting '$RELEASE_VERSION_NAME' release and '$GITHUB_REF' tag"
              hub release delete "$RELEASE_VERSION_NAME"
              git push --delete origin "$GITHUB_REF"
              exit 1
          }

          echo "Setting vars"
          RELEASE_VERSION_NAME="${GITHUB_REF/refs\/tags\//}"
          if ! printf "%s" "${RELEASE_VERSION_NAME/v/}" | grep -qP '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'; then
           exit_on_error "The versionName '${RELEASE_VERSION_NAME/v/}' is not a valid version as per semantic version '2.0.0' spec in the format 'major.minor.patch(-prerelease)(+buildmetadata)'. https://semver.org/spec/v2.0.0.html."
          fi

          APK_DIR_PATH="./app/build/outputs/apk/release/"
          APK_VERSION_TAG="$RELEASE_VERSION_NAME-github-release"
          APK_BASENAME_PREFIX="app-"
          APK_BASENAME_SUFIX="-release"

          echo "Building APKs for 'APK_VERSION_TAG' release"
          export TERMUX_APK_VERSION_TAG="$APK_VERSION_TAG" # Used by app/build.gradle
          if ! ./gradlew assembleRelease; then
            exit_on_error "Build failed for '$APK_VERSION_TAG' release."
          fi

          echo "Generating sha25sums file"
          if ! (cd "$APK_DIR_PATH"; sha256sum \
            "${APK_BASENAME_PREFIX}universal${APK_BASENAME_SUFIX}.apk" \
            "${APK_BASENAME_PREFIX}arm64-v8a${APK_BASENAME_SUFIX}.apk" \
            "${APK_BASENAME_PREFIX}armeabi-v7a${APK_BASENAME_SUFIX}.apk" \
            "${APK_BASENAME_PREFIX}x86_64${APK_BASENAME_SUFIX}.apk" \
            "${APK_BASENAME_PREFIX}x86${APK_BASENAME_SUFIX}.apk" \
            > "${APK_BASENAME_PREFIX}All-Arch${APK_BASENAME_SUFIX}_sha256sums"); then
            exit_on_error "Generate sha25sums failed for '$APK_VERSION_TAG' release."
          fi

          echo "Attaching APKs to github release"
          if ! hub release edit \
          -m "" \
          -a "$APK_DIR_PATH/${APK_BASENAME_PREFIX}universal${APK_BASENAME_SUFIX}.apk" \
          -a "$APK_DIR_PATH/${APK_BASENAME_PREFIX}arm64-v8a${APK_BASENAME_SUFIX}.apk" \
          -a "$APK_DIR_PATH/${APK_BASENAME_PREFIX}armeabi-v7a${APK_BASENAME_SUFIX}.apk" \
          -a "$APK_DIR_PATH/${APK_BASENAME_PREFIX}x86_64${APK_BASENAME_SUFIX}.apk" \
          -a "$APK_DIR_PATH/${APK_BASENAME_PREFIX}x86${APK_BASENAME_SUFIX}.apk" \
          -a "$APK_DIR_PATH/${APK_BASENAME_PREFIX}All-Arch${APK_BASENAME_SUFIX}_sha256sums" \
          "$RELEASE_VERSION_NAME"; then
            exit_on_error "Attach APKs to release failed for '$APK_VERSION_TAG' release."
          fi

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}
      - run: Timestamp=`date '+%F_%H:%M:%S'`;rclone copyto $PWD/app/build/outputs/apk/release goorm-server:/var/www/html/My-PWA-App_Released_$Timestamp
        env:
          RCLONE_CONFIG_PASS: ${{ secrets.RCLONE_CONFIG_PASS }}

    # - uses: actions/upload-artifact@v3
    #   with:
    #    name: Debug Application
    #    path: ./app/build/outputs/apk/debug/app-debug.apk
      
